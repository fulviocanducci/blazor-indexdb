@page "/jobs"
@inject Repository<Job> Repository;
@using WebApplication1.Models
@using WebApplication1.DataAccess
<h3>Jobs</h3>
<div class="row">
    <div class="col-8 mt-2">
        <input type="text" @bind-value="Description" @onkeyup="@(async(e) => await HandlerKeyUpAsync(e))" class="form-control" />
    </div>
    <div class="col-4 mt-2">
        <button @onclick="@(async() => await AddJobDescriptionAsync())" class="btn btn-outline-primary btn-block">Add</button>
    </div>
</div>
<div>
    @if (Results == null)
    {
        <Loading />
    }
    else
    {
        <div class="list-group mt-4">
            @foreach (var result in Results)
            {
                <div class="list-group-item d-flex justify-content-between align-items-center">
                    @result.Description                    
                    <span class="form-check form-check-inline">
                        <input class="form-check-input regular-checkbox" type="checkbox" checked="@result.Done" @onclick="@(async(args) => await SetJobDoneAsync(result))" />
                    </span>                     
                </div>
            }
        </div>
    }
</div>

@code {
    string Description { get; set; }
    List<Job> Results { get; set; }

    protected override async Task OnInitAsync()
    {
        await LoadJobListAsync();
    }

    async Task LoadJobListAsync()
    {
        Results = await Repository.AllAsync();
    }

    async Task SetJobDoneAsync(Job job)
    {
        job.Done = !job.Done;
        Repository.Update(job);
        await LoadJobListAsync();
        StateHasChanged();
    }

    async Task AddJobDescriptionAsync()
    {
        if (!string.IsNullOrEmpty(Description))
        {
            var job = new Job()
            {
                Description = Description,
                Done = false
            };
            Repository.Add(job);
            await LoadJobListAsync();
            Description = string.Empty;
        }
    }

    async Task HandlerKeyUpAsync(UIKeyboardEventArgs args)
    {        
        if (args.Key == "Enter")
        {
            await AddJobDescriptionAsync();
        }
    }
}
